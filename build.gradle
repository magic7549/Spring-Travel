plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.asciidoctor.jvm.convert' version '3.3.2' // api 문서 자동화
}

group = 'com.yong'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt	// api 문서 자동화
}

repositories {
	mavenCentral()
}

dependencies {
	/* web */
	implementation 'org.springframework.boot:spring-boot-starter-web'

	/* security */
	implementation 'org.springframework.boot:spring-boot-starter-security'

	/* jwt */
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	/* thymeleaf */
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

	/* lombok */
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	/* test */
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	/* jpa, db */
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.h2database:h2'

	/* devtools */
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	/* api 문서 자동화 */
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:3.0.0'
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	/* WebClient */
	implementation 'org.springframework.boot:spring-boot-starter-webflux:3.2.2'

}

tasks.named('test') {
	useJUnitPlatform()
}

/******* api 문서 자동화 start *******/
ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor
	doFirst{
		delete file('src/main/resources/static/docs')
	}
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}

bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}
/******* api 문서 자동화 end *******/